// <auto-generated />
using System;
using BlazorApp1.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlazorApp1.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BlazorApp1.Shared.Fault", b =>
                {
                    b.Property<int>("FaultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FaultId"), 1L, 1);

                    b.Property<bool>("AcceptsWarning")
                        .HasColumnType("bit");

                    b.Property<string>("AffectingWhat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiagnosticsResults")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DivertPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DivertRequired")
                        .HasColumnType("bit");

                    b.Property<string>("FaultAgainst")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncidentDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncidentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IntermittentDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsIntermittent")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FaultId");

                    b.ToTable("errors");

                    b.HasData(
                        new
                        {
                            FaultId = 1,
                            AcceptsWarning = false,
                            AffectingWhat = "x",
                            DiagnosticsResults = "x",
                            DivertPhone = "x",
                            DivertRequired = true,
                            FaultAgainst = "Wifi",
                            IncidentDetails = "x",
                            IncidentType = "x",
                            IntermittentDetails = "x",
                            IsIntermittent = false,
                            Notes = "NA",
                            Status = "Done"
                        },
                        new
                        {
                            FaultId = 2,
                            AcceptsWarning = false,
                            AffectingWhat = "x",
                            DiagnosticsResults = "x",
                            DivertPhone = "x",
                            DivertRequired = true,
                            FaultAgainst = "Wifi",
                            IncidentDetails = "x",
                            IncidentType = "x",
                            IntermittentDetails = "x",
                            IsIntermittent = false,
                            Notes = "NA",
                            Status = "not Done"
                        },
                        new
                        {
                            FaultId = 3,
                            AcceptsWarning = false,
                            AffectingWhat = "x",
                            DiagnosticsResults = "x",
                            DivertPhone = "x",
                            DivertRequired = true,
                            FaultAgainst = "Wifi",
                            IncidentDetails = "x",
                            IncidentType = "x",
                            IntermittentDetails = "x",
                            IsIntermittent = false,
                            Notes = "NA",
                            Status = "not Done"
                        });
                });

            modelBuilder.Entity("BlazorApp1.Shared.xlnuser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FaultId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FaultId");

                    b.ToTable("customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Thone Drive S91QR",
                            CompanyName = " Bakes ",
                            Email = "ismail@gmail.com",
                            Name = "Ismail",
                            Password = "1234",
                            PhoneNumber = "0770128013",
                            UserName = "IsmailBakes"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Highgate S43ASD",
                            CompanyName = " Ahemds Foods ",
                            Email = "ahmed@gmail.com",
                            Name = "Ahmed",
                            Password = "1234",
                            PhoneNumber = "072304713201",
                            UserName = "AhmedFoods"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Hasfield Drive S32QR",
                            CompanyName = " Sandwhich mani ",
                            Email = "john@gmail.com",
                            Name = "John KLSD",
                            Password = "1234",
                            PhoneNumber = "07237030812",
                            UserName = "JohnK"
                        });
                });

            modelBuilder.Entity("BlazorApp1.Shared.xlnuser", b =>
                {
                    b.HasOne("BlazorApp1.Shared.Fault", "Fault")
                        .WithMany()
                        .HasForeignKey("FaultId");

                    b.Navigation("Fault");
                });
#pragma warning restore 612, 618
        }
    }
}
