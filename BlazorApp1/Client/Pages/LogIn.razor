@page  "/login"
@inject IUserService UserService
@inject NavigationManager NavigationManager


<h3>Log In</h3>

<EditForm Model="user" OnSubmit="submit">
    <div class="form-group">
        <label for="username">Username</label>
        <InputText id="username" @bind-Value="UserName" class="form-control" />
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="Password" type="password" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

@*<form>
  

    <div>
      <label for="uname"><b>Username</b></label>
      <input type="text" @bind="xlnuser.UserName" placeholder="Enter Username" name="uname" required>

      <label for="psw"><b>Password</b></label>
      <input type="password" @bind="Password" placeholder="Enter Password" name="psw" required>
        
      
            <button type="submit" @onclick="submit"> Login</button>
        
     
     
    </div>

     
                    
      
  
  </form>*@

  

                
@code {

     protected override async Task OnInitializedAsync()
    {

    await UserService.GetUsers();
    }

    public string UserName { get; set; }

 
    private string Password { get; set; } = string.Empty;

    xlnuser user = new xlnuser();

    public async Task submit()
    {

        foreach ( var un in UserService.Users)
        {
            if (un.Id == Convert.ToInt32(UserName) && un.Password == Password )
            {
                
               NavigationManager.NavigateTo($"user/{un.Id}");
            }

        }
    }  

    
      
}